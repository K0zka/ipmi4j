/*
 * This file is autogenerated.
 */
package org.anarres.ipmi.protocol.client;

import javax.annotation.Nonnull;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiCommand;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiResponse;
#foreach ($value in $values)
#if (${value.requestType})
import ${value.requestType.name};
#end
#if (${value.responseType})
import ${value.responseType.name};
#end
#end
import org.anarres.ipmi.protocol.packet.ipmi.session.IpmiSession;

/**
 * Autogenerated visitor handler for {@link IpmiCommand} subclasses.
 *
 * @author shevek
 */
public interface IpmiClientCommandHandler {

    public static class Adapter implements IpmiClientCommandHandler {

        public void handleDefault(@Nonnull IpmiCommand command) {
        }

        public void handleRequest(@Nonnull IpmiRequest request) {
            handleDefault(request);
        }

        public void handleResponse(@Nonnull IpmiResponse response) {
            handleDefault(response);
        }
#foreach ($value in $values)
#if (${value.requestType})

        @Override
        public void handle${value.requestType.simpleName}(${value.requestType.simpleName} request) {
            handleRequest(request);
        }
#end
#if (${value.responseType})

        @Override
        public void handle${value.responseType.simpleName}(${value.responseType.simpleName} response) {
            handleResponse(response);
        }
#end
#end
    }
#foreach ($value in $values)
#if (${value.requestType})

    public void handle${value.requestType.simpleName}(@Nonnull ${value.requestType.simpleName} request);
#end
#if (${value.responseType})

    public void handle${value.responseType.simpleName}(@Nonnull ${value.responseType.simpleName} response);
#end
#end
}
