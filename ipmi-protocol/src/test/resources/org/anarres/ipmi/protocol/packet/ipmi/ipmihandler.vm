/*
 * This file is autogenerated.
 */
package org.anarres.ipmi.protocol.client.visitor;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiCommand;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiResponse;
#foreach ($value in $values)
#if (${value.requestType})
import ${value.requestType.name};
#end
#if (${value.responseType})
import ${value.responseType.name};
#end
#end

/**
 * Autogenerated visitor handler for {@link IpmiCommand} subclasses.
 *
 * @author shevek
 */
public interface IpmiClientIpmiCommandHandler {


    public static class Adapter implements IpmiClientIpmiCommandHandler {

        public void handleDefault(@Nonnull IpmiHandlerContext context, @Nonnull IpmiCommand command) {
        }

        public void handleRequest(@Nonnull IpmiHandlerContext context, @Nonnull IpmiRequest request) {
            handleDefault(context, request);
        }

        public void handleResponse(@Nonnull IpmiHandlerContext context, @Nonnull IpmiResponse response) {
            handleDefault(context, response);
        }
#foreach ($value in $values)
#if (${value.requestType})

        @Override
        public void handle${value.requestType.simpleName}(IpmiHandlerContext context, ${value.requestType.simpleName} request) {
            handleRequest(context, request);
        }
#end
#if (${value.responseType})

        @Override
        public void handle${value.responseType.simpleName}(IpmiHandlerContext context, ${value.responseType.simpleName} response) {
            handleResponse(context, response);
        }
#end
#end
    }
#foreach ($value in $values)
#if (${value.requestType})

    public void handle${value.requestType.simpleName}(@Nonnull IpmiHandlerContext context, @Nonnull ${value.requestType.simpleName} request);
#end
#if (${value.responseType})

    public void handle${value.responseType.simpleName}(@Nonnull IpmiHandlerContext context, @Nonnull ${value.responseType.simpleName} response);
#end
#end
}
