/*
 * This file is autogenerated.
 */
package org.anarres.ipmi.protocol.client;

import javax.annotation.Nonnull;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiCommand;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersResponse;
import org.anarres.ipmi.protocol.packet.ipmi.session.IpmiSession;

/**
 * Autogenerated visitor handler for {@link IpmiCommand} subclasses.
 *
 * @author shevek
 */
public interface IpmiClientCommandHandler {

    public static class Adapter implements IpmiClientCommandHandler {

        public void handleDefault(@Nonnull IpmiCommand command) {
        }

        public void handleRequest(@Nonnull IpmiRequest request) {
            handleDefault(request);
        }

        public void handleResponse(@Nonnull IpmiResponse response) {
            handleDefault(response);
        }

        @Override
        public void handleGetDeviceIdRequest(GetDeviceIdRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetDeviceIdResponse(GetDeviceIdResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesRequest(GetChannelAuthenticationCapabilitiesRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesResponse(GetChannelAuthenticationCapabilitiesResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleSetSessionPrivilegeLevelRequest(SetSessionPrivilegeLevelRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleSetSessionPrivilegeLevelResponse(SetSessionPrivilegeLevelResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleCloseSessionRequest(CloseSessionRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleCloseSessionResponse(CloseSessionResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChannelAccessRequest(GetChannelAccessRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChannelAccessResponse(GetChannelAccessResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChannelInfoRequest(GetChannelInfoRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChannelInfoResponse(GetChannelInfoResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChannelCipherSuitesRequest(GetChannelCipherSuitesRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChannelCipherSuitesResponse(GetChannelCipherSuitesResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChassisCapabilitiesRequest(GetChassisCapabilitiesRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChassisCapabilitiesResponse(GetChassisCapabilitiesResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetChassisStatusRequest(GetChassisStatusRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetChassisStatusResponse(GetChassisStatusResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleChassisControlRequest(ChassisControlRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleChassisControlResponse(ChassisControlResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSystemRestartCauseRequest(GetSystemRestartCauseRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSystemRestartCauseResponse(GetSystemRestartCauseResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSensorThresholdRequest(GetSensorThresholdRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSensorThresholdResponse(GetSensorThresholdResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSensorReadingRequest(GetSensorReadingRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSensorReadingResponse(GetSensorReadingResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoRequest(GetFRUInventoryAreaInfoRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoResponse(GetFRUInventoryAreaInfoResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleReadFRUDataRequest(ReadFRUDataRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleReadFRUDataResponse(ReadFRUDataResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSDRRepositoryInfoRequest(GetSDRRepositoryInfoRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSDRRepositoryInfoResponse(GetSDRRepositoryInfoResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleReserveSDRRepositoryRequest(ReserveSDRRepositoryRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleReserveSDRRepositoryResponse(ReserveSDRRepositoryResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSDRRequest(GetSDRRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSDRResponse(GetSDRResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSELInfoRequest(GetSELInfoRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSELInfoResponse(GetSELInfoResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSELAllocationInfoRequest(GetSELAllocationInfoRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSELAllocationInfoResponse(GetSELAllocationInfoResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetLANConfigurationParametersRequest(GetLANConfigurationParametersRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetLANConfigurationParametersResponse(GetLANConfigurationParametersResponse response) {
            handleResponse(response);
        }

        @Override
        public void handleGetSOLConfigurationParametersRequest(GetSOLConfigurationParametersRequest request) {
            handleRequest(request);
        }

        @Override
        public void handleGetSOLConfigurationParametersResponse(GetSOLConfigurationParametersResponse response) {
            handleResponse(response);
        }
    }

    public void handleGetDeviceIdRequest(@Nonnull GetDeviceIdRequest request);

    public void handleGetDeviceIdResponse(@Nonnull GetDeviceIdResponse response);

    public void handleGetChannelAuthenticationCapabilitiesRequest(@Nonnull GetChannelAuthenticationCapabilitiesRequest request);

    public void handleGetChannelAuthenticationCapabilitiesResponse(@Nonnull GetChannelAuthenticationCapabilitiesResponse response);

    public void handleSetSessionPrivilegeLevelRequest(@Nonnull SetSessionPrivilegeLevelRequest request);

    public void handleSetSessionPrivilegeLevelResponse(@Nonnull SetSessionPrivilegeLevelResponse response);

    public void handleCloseSessionRequest(@Nonnull CloseSessionRequest request);

    public void handleCloseSessionResponse(@Nonnull CloseSessionResponse response);

    public void handleGetChannelAccessRequest(@Nonnull GetChannelAccessRequest request);

    public void handleGetChannelAccessResponse(@Nonnull GetChannelAccessResponse response);

    public void handleGetChannelInfoRequest(@Nonnull GetChannelInfoRequest request);

    public void handleGetChannelInfoResponse(@Nonnull GetChannelInfoResponse response);

    public void handleGetChannelCipherSuitesRequest(@Nonnull GetChannelCipherSuitesRequest request);

    public void handleGetChannelCipherSuitesResponse(@Nonnull GetChannelCipherSuitesResponse response);

    public void handleGetChassisCapabilitiesRequest(@Nonnull GetChassisCapabilitiesRequest request);

    public void handleGetChassisCapabilitiesResponse(@Nonnull GetChassisCapabilitiesResponse response);

    public void handleGetChassisStatusRequest(@Nonnull GetChassisStatusRequest request);

    public void handleGetChassisStatusResponse(@Nonnull GetChassisStatusResponse response);

    public void handleChassisControlRequest(@Nonnull ChassisControlRequest request);

    public void handleChassisControlResponse(@Nonnull ChassisControlResponse response);

    public void handleGetSystemRestartCauseRequest(@Nonnull GetSystemRestartCauseRequest request);

    public void handleGetSystemRestartCauseResponse(@Nonnull GetSystemRestartCauseResponse response);

    public void handleGetSensorThresholdRequest(@Nonnull GetSensorThresholdRequest request);

    public void handleGetSensorThresholdResponse(@Nonnull GetSensorThresholdResponse response);

    public void handleGetSensorReadingRequest(@Nonnull GetSensorReadingRequest request);

    public void handleGetSensorReadingResponse(@Nonnull GetSensorReadingResponse response);

    public void handleGetFRUInventoryAreaInfoRequest(@Nonnull GetFRUInventoryAreaInfoRequest request);

    public void handleGetFRUInventoryAreaInfoResponse(@Nonnull GetFRUInventoryAreaInfoResponse response);

    public void handleReadFRUDataRequest(@Nonnull ReadFRUDataRequest request);

    public void handleReadFRUDataResponse(@Nonnull ReadFRUDataResponse response);

    public void handleGetSDRRepositoryInfoRequest(@Nonnull GetSDRRepositoryInfoRequest request);

    public void handleGetSDRRepositoryInfoResponse(@Nonnull GetSDRRepositoryInfoResponse response);

    public void handleReserveSDRRepositoryRequest(@Nonnull ReserveSDRRepositoryRequest request);

    public void handleReserveSDRRepositoryResponse(@Nonnull ReserveSDRRepositoryResponse response);

    public void handleGetSDRRequest(@Nonnull GetSDRRequest request);

    public void handleGetSDRResponse(@Nonnull GetSDRResponse response);

    public void handleGetSELInfoRequest(@Nonnull GetSELInfoRequest request);

    public void handleGetSELInfoResponse(@Nonnull GetSELInfoResponse response);

    public void handleGetSELAllocationInfoRequest(@Nonnull GetSELAllocationInfoRequest request);

    public void handleGetSELAllocationInfoResponse(@Nonnull GetSELAllocationInfoResponse response);

    public void handleGetLANConfigurationParametersRequest(@Nonnull GetLANConfigurationParametersRequest request);

    public void handleGetLANConfigurationParametersResponse(@Nonnull GetLANConfigurationParametersResponse response);

    public void handleGetSOLConfigurationParametersRequest(@Nonnull GetSOLConfigurationParametersRequest request);

    public void handleGetSOLConfigurationParametersResponse(@Nonnull GetSOLConfigurationParametersResponse response);

}
