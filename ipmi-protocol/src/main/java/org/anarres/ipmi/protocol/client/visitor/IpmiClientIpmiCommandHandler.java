/*
 * This file is autogenerated.
 */
package org.anarres.ipmi.protocol.client.visitor;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiCommand;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersResponse;
import org.anarres.ipmi.protocol.packet.ipmi.session.IpmiSession;

/**
 * Autogenerated visitor handler for {@link IpmiCommand} subclasses.
 *
 * @author shevek
 */
public interface IpmiClientIpmiCommandHandler {

    public static class Adapter implements IpmiClientIpmiCommandHandler {

        public void handleDefault(@CheckForNull IpmiSession session, @Nonnull IpmiCommand command) {
        }

        public void handleRequest(@CheckForNull IpmiSession session, @Nonnull IpmiRequest request) {
            handleDefault(session, request);
        }

        public void handleResponse(@CheckForNull IpmiSession session, @Nonnull IpmiResponse response) {
            handleDefault(session, response);
        }

        @Override
        public void handleGetDeviceIdRequest(IpmiSession session, GetDeviceIdRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetDeviceIdResponse(IpmiSession session, GetDeviceIdResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesRequest(IpmiSession session, GetChannelAuthenticationCapabilitiesRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesResponse(IpmiSession session, GetChannelAuthenticationCapabilitiesResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleSetSessionPrivilegeLevelRequest(IpmiSession session, SetSessionPrivilegeLevelRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleSetSessionPrivilegeLevelResponse(IpmiSession session, SetSessionPrivilegeLevelResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleCloseSessionRequest(IpmiSession session, CloseSessionRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleCloseSessionResponse(IpmiSession session, CloseSessionResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChannelAccessRequest(IpmiSession session, GetChannelAccessRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChannelAccessResponse(IpmiSession session, GetChannelAccessResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChannelInfoRequest(IpmiSession session, GetChannelInfoRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChannelInfoResponse(IpmiSession session, GetChannelInfoResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChannelCipherSuitesRequest(IpmiSession session, GetChannelCipherSuitesRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChannelCipherSuitesResponse(IpmiSession session, GetChannelCipherSuitesResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChassisCapabilitiesRequest(IpmiSession session, GetChassisCapabilitiesRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChassisCapabilitiesResponse(IpmiSession session, GetChassisCapabilitiesResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetChassisStatusRequest(IpmiSession session, GetChassisStatusRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetChassisStatusResponse(IpmiSession session, GetChassisStatusResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleChassisControlRequest(IpmiSession session, ChassisControlRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleChassisControlResponse(IpmiSession session, ChassisControlResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSystemRestartCauseRequest(IpmiSession session, GetSystemRestartCauseRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSystemRestartCauseResponse(IpmiSession session, GetSystemRestartCauseResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSensorThresholdRequest(IpmiSession session, GetSensorThresholdRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSensorThresholdResponse(IpmiSession session, GetSensorThresholdResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSensorReadingRequest(IpmiSession session, GetSensorReadingRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSensorReadingResponse(IpmiSession session, GetSensorReadingResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoRequest(IpmiSession session, GetFRUInventoryAreaInfoRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoResponse(IpmiSession session, GetFRUInventoryAreaInfoResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleReadFRUDataRequest(IpmiSession session, ReadFRUDataRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleReadFRUDataResponse(IpmiSession session, ReadFRUDataResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSDRRepositoryInfoRequest(IpmiSession session, GetSDRRepositoryInfoRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSDRRepositoryInfoResponse(IpmiSession session, GetSDRRepositoryInfoResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleReserveSDRRepositoryRequest(IpmiSession session, ReserveSDRRepositoryRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleReserveSDRRepositoryResponse(IpmiSession session, ReserveSDRRepositoryResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSDRRequest(IpmiSession session, GetSDRRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSDRResponse(IpmiSession session, GetSDRResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSELInfoRequest(IpmiSession session, GetSELInfoRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSELInfoResponse(IpmiSession session, GetSELInfoResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSELAllocationInfoRequest(IpmiSession session, GetSELAllocationInfoRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSELAllocationInfoResponse(IpmiSession session, GetSELAllocationInfoResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetLANConfigurationParametersRequest(IpmiSession session, GetLANConfigurationParametersRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetLANConfigurationParametersResponse(IpmiSession session, GetLANConfigurationParametersResponse response) {
            handleResponse(session, response);
        }

        @Override
        public void handleGetSOLConfigurationParametersRequest(IpmiSession session, GetSOLConfigurationParametersRequest request) {
            handleRequest(session, request);
        }

        @Override
        public void handleGetSOLConfigurationParametersResponse(IpmiSession session, GetSOLConfigurationParametersResponse response) {
            handleResponse(session, response);
        }
    }

    public void handleGetDeviceIdRequest(@CheckForNull IpmiSession session, @Nonnull GetDeviceIdRequest request);

    public void handleGetDeviceIdResponse(@CheckForNull IpmiSession session, @Nonnull GetDeviceIdResponse response);

    public void handleGetChannelAuthenticationCapabilitiesRequest(@CheckForNull IpmiSession session, @Nonnull GetChannelAuthenticationCapabilitiesRequest request);

    public void handleGetChannelAuthenticationCapabilitiesResponse(@CheckForNull IpmiSession session, @Nonnull GetChannelAuthenticationCapabilitiesResponse response);

    public void handleSetSessionPrivilegeLevelRequest(@CheckForNull IpmiSession session, @Nonnull SetSessionPrivilegeLevelRequest request);

    public void handleSetSessionPrivilegeLevelResponse(@CheckForNull IpmiSession session, @Nonnull SetSessionPrivilegeLevelResponse response);

    public void handleCloseSessionRequest(@CheckForNull IpmiSession session, @Nonnull CloseSessionRequest request);

    public void handleCloseSessionResponse(@CheckForNull IpmiSession session, @Nonnull CloseSessionResponse response);

    public void handleGetChannelAccessRequest(@CheckForNull IpmiSession session, @Nonnull GetChannelAccessRequest request);

    public void handleGetChannelAccessResponse(@CheckForNull IpmiSession session, @Nonnull GetChannelAccessResponse response);

    public void handleGetChannelInfoRequest(@CheckForNull IpmiSession session, @Nonnull GetChannelInfoRequest request);

    public void handleGetChannelInfoResponse(@CheckForNull IpmiSession session, @Nonnull GetChannelInfoResponse response);

    public void handleGetChannelCipherSuitesRequest(@CheckForNull IpmiSession session, @Nonnull GetChannelCipherSuitesRequest request);

    public void handleGetChannelCipherSuitesResponse(@CheckForNull IpmiSession session, @Nonnull GetChannelCipherSuitesResponse response);

    public void handleGetChassisCapabilitiesRequest(@CheckForNull IpmiSession session, @Nonnull GetChassisCapabilitiesRequest request);

    public void handleGetChassisCapabilitiesResponse(@CheckForNull IpmiSession session, @Nonnull GetChassisCapabilitiesResponse response);

    public void handleGetChassisStatusRequest(@CheckForNull IpmiSession session, @Nonnull GetChassisStatusRequest request);

    public void handleGetChassisStatusResponse(@CheckForNull IpmiSession session, @Nonnull GetChassisStatusResponse response);

    public void handleChassisControlRequest(@CheckForNull IpmiSession session, @Nonnull ChassisControlRequest request);

    public void handleChassisControlResponse(@CheckForNull IpmiSession session, @Nonnull ChassisControlResponse response);

    public void handleGetSystemRestartCauseRequest(@CheckForNull IpmiSession session, @Nonnull GetSystemRestartCauseRequest request);

    public void handleGetSystemRestartCauseResponse(@CheckForNull IpmiSession session, @Nonnull GetSystemRestartCauseResponse response);

    public void handleGetSensorThresholdRequest(@CheckForNull IpmiSession session, @Nonnull GetSensorThresholdRequest request);

    public void handleGetSensorThresholdResponse(@CheckForNull IpmiSession session, @Nonnull GetSensorThresholdResponse response);

    public void handleGetSensorReadingRequest(@CheckForNull IpmiSession session, @Nonnull GetSensorReadingRequest request);

    public void handleGetSensorReadingResponse(@CheckForNull IpmiSession session, @Nonnull GetSensorReadingResponse response);

    public void handleGetFRUInventoryAreaInfoRequest(@CheckForNull IpmiSession session, @Nonnull GetFRUInventoryAreaInfoRequest request);

    public void handleGetFRUInventoryAreaInfoResponse(@CheckForNull IpmiSession session, @Nonnull GetFRUInventoryAreaInfoResponse response);

    public void handleReadFRUDataRequest(@CheckForNull IpmiSession session, @Nonnull ReadFRUDataRequest request);

    public void handleReadFRUDataResponse(@CheckForNull IpmiSession session, @Nonnull ReadFRUDataResponse response);

    public void handleGetSDRRepositoryInfoRequest(@CheckForNull IpmiSession session, @Nonnull GetSDRRepositoryInfoRequest request);

    public void handleGetSDRRepositoryInfoResponse(@CheckForNull IpmiSession session, @Nonnull GetSDRRepositoryInfoResponse response);

    public void handleReserveSDRRepositoryRequest(@CheckForNull IpmiSession session, @Nonnull ReserveSDRRepositoryRequest request);

    public void handleReserveSDRRepositoryResponse(@CheckForNull IpmiSession session, @Nonnull ReserveSDRRepositoryResponse response);

    public void handleGetSDRRequest(@CheckForNull IpmiSession session, @Nonnull GetSDRRequest request);

    public void handleGetSDRResponse(@CheckForNull IpmiSession session, @Nonnull GetSDRResponse response);

    public void handleGetSELInfoRequest(@CheckForNull IpmiSession session, @Nonnull GetSELInfoRequest request);

    public void handleGetSELInfoResponse(@CheckForNull IpmiSession session, @Nonnull GetSELInfoResponse response);

    public void handleGetSELAllocationInfoRequest(@CheckForNull IpmiSession session, @Nonnull GetSELAllocationInfoRequest request);

    public void handleGetSELAllocationInfoResponse(@CheckForNull IpmiSession session, @Nonnull GetSELAllocationInfoResponse response);

    public void handleGetLANConfigurationParametersRequest(@CheckForNull IpmiSession session, @Nonnull GetLANConfigurationParametersRequest request);

    public void handleGetLANConfigurationParametersResponse(@CheckForNull IpmiSession session, @Nonnull GetLANConfigurationParametersResponse response);

    public void handleGetSOLConfigurationParametersRequest(@CheckForNull IpmiSession session, @Nonnull GetSOLConfigurationParametersRequest request);

    public void handleGetSOLConfigurationParametersResponse(@CheckForNull IpmiSession session, @Nonnull GetSOLConfigurationParametersResponse response);
}
